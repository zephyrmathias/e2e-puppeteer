name: Puppeteer

on:
  repository_dispatch:
    types: regression

jobs:
  test1:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        device: ['desktop', 'mobile']

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js version 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Install dependencies
      run: npm ci
      
    - name: Set up Tag
      uses: haya14busa/action-cond@v1
      id: tag
      with:
        cond: ${{ matrix.device == 'desktop' }}
        if_true: "@smoke and not @mobile"
        if_false: "@smoke and not @desktop"

    - name: Run test
      env:
        WEB_URL: https://www.google.com
        TAG: ${{ steps.tag.outputs.value }}
      run: |
        npm test
        
    - name: Read test result
      id: test-result
      uses: juliangruber/read-file-action@v1
      with:
        path: ./test-result.json

    - id: data
      uses: gr2m/get-json-paths-action@v1.x
      with:
        json: ${{ toJson(steps.test-result.outputs.content) }}
        bar: "numPassedTests"
    - run: "echo bar is ${{ steps.data.outputs.bar }}"

    - name: Write number of tests
      if: ${{ always() }}
      run: |
        echo "{\"title\":\"Passed\",\"value\":\"${{ steps.read_property.outputs.value }}\",\"short\":true}" > ${{ matrix.device }}_results.txt
        
    - name: Upload Test Result
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.device }}_results
        path: ${{ matrix.device }}_results.txt

    - name: Write Test Result
      if: ${{ always() }}
      run: echo ${{ job.status }} > ${{ matrix.device }}.txt

    - name: Upload Test Result
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.device }}
        path: ${{ matrix.device }}.txt
        
    - name: Upload Test Result
      if: ${{ always() }}
      uses: actions/upload-artifact@v1
      with:
        name: test-result.json
        path: test-result.json

  parallel:
    needs: [test1]
    if: ${{ always() }}

    runs-on: ubuntu-latest
  
    steps:
    - name: Download test results
      uses: actions/download-artifact@v1
      with:
        name: desktop
        
    - name: Download test results
      uses: actions/download-artifact@v1
      with:
        name: mobile
